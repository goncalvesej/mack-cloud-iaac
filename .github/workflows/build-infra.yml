name: 'Deploy to AWS'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: true
        type: string
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

permissions:
  contents: read

jobs:
  print-tags:
    runs-on: ubuntu-latest
    steps:
      - name: Print the input tag to STDOUT
        run: echo  The tags are ${{ inputs.tags }} 
  
  terraform:
    name: 'Build infra'
    runs-on: ubuntu-latest
    needs: [print-tags]

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.7.4
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init -var-file="./env/prod.tfvars"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
        TF_VAR_ssh_public_key_file: ${{ secrets.AWS_PUBLIC_SSH_KEY }}

    - name: Terraform Plan
      run: terraform plan -var-file="./env/prod.tfvars"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
        TF_VAR_ssh_public_key_file: ${{ secrets.AWS_PUBLIC_SSH_KEY }}

    - name: Terraform Apply
      id: tf_apply
      run: terraform apply -var-file="./env/prod.tfvars" -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
        TF_VAR_ssh_public_key_file: ${{ secrets.AWS_PUBLIC_SSH_KEY }}
    
    - name: Set webserver_url Terraform Output
      id: tf_webserver_url_output
      run: echo "webserver_url=$(terraform output webserver_url)" >> $GITHUB_OUTPUT
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
        TF_VAR_ssh_public_key_file: ${{ secrets.AWS_PUBLIC_SSH_KEY }}
    
    - name: Set ssh_username Terraform Output
      id: tf_ssh_username_output
      run: echo "ssh_username=$(terraform output ssh_username)" >> $GITHUB_OUTPUT
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
        TF_VAR_ssh_public_key_file: ${{ secrets.AWS_PUBLIC_SSH_KEY }}
    
    outputs:
      webserver_url: ${{ steps.tf_webserver_url_output.outputs.webserver_url }}
      ssh_username: ${{ steps.tf_ssh_username_output.outputs.ssh_username }}


  ansible:
    name: 'Setup environment'
    runs-on: ubuntu-latest
    needs: [terraform]

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set SSH Key
      run: |
        echo "${{secrets.AWS_PRIVATE_SSH_KEY}}" > key.pem && chmod 400 key.pem
    
    - name: Run playbook
      run: |
        ansible-playbook --inventory ${{needs.terraform.outputs.webserver_url}}, --private-key "./key.pem" --user ${{needs.terraform.outputs.ssh_username}} setup-environment.yml

    - name: App URL
      run: |
         echo http://${{needs.terraform.outputs.webserver_url}}

